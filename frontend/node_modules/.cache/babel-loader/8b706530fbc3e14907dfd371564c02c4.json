{"ast":null,"code":"var _jsxFileName = \"/Users/evelyn/Desktop/CSC307/ease/frontend/src/components/webpages/MyToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./MyToDoList.css\";\nimport \"../Todo.css\";\nimport \"../Lists.css\";\nimport TodoForm from \"../TodoForm\";\nimport TodoList from \"../TodoList\";\nimport ListForm from \"../ListForm\";\nimport AllLists from \"../AllLists\";\nimport { VscEllipsis, VscClose } from \"react-icons/vsc\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyToDoList() {\n  _s();\n\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  const closeMenu = () => setClick(false);\n\n  function handleClearTasks() {\n    closeMenu();\n    setLists(lists.map(list => {\n      if (activeListID === list.id) {\n        return { ...list,\n          tasks: list.tasks.filter(task => task.completed === false)\n        };\n      }\n\n      return list;\n    })); // setTasks(tasks.filter(task => task.completed === false));\n  }\n\n  function handleDeleteList() {\n    closeMenu();\n    deleteList(activeListID); //    setLists(\n    //        lists.filter(list => list.id !== activeListID[0])\n    //    );\n    //    setActiveListID(lists.filter(list => list.id !== activeListID[0]));\n    //    setActiveList(lists.find(list => list.id === activeListID[0]));\n  } // const [tasks, setTasks] = useState([]);\n\n\n  const [lists, setLists] = useState([{\n    id: \"abc123\",\n    name: \"Today\",\n    tasks: []\n  }]);\n  const [activeListID, setActiveListID] = useState(\"abc123\"); // const [activeList, setActiveList] = useState(lists.find(list => list.id === activeListID[0]));\n\n  const activeList = lists.find(list => list.id === activeListID);\n\n  async function addTask(task) {\n    setLists(lists.map(list => {\n      if (activeListID === list.id) {\n        list.tasks.push(task);\n        return { ...list\n        };\n      }\n\n      return list;\n    }));\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/task\", task);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    } // setTasks([task, ...tasks]);\n\n  }\n\n  function addList(list) {\n    setLists([list, ...lists]);\n  }\n\n  function toggleComplete(id) {\n    setLists(lists.map(list => {\n      if (activeListID === list.id) {\n        return { ...list,\n          tasks: list.tasks.map(task => {\n            if (task.id === id) {\n              return { ...task,\n                completed: !task.completed\n              };\n            }\n\n            return task;\n          })\n        };\n      }\n\n      return list;\n    })); // setTasks(\n    //   tasks.map(task => {\n    //     if (task.id === id) {\n    //       return {\n    //         ...task,\n    //         completed: !task.completed\n    //       };\n    //     }\n    //     return task;\n    //   })\n    // )\n  }\n\n  function setActive(id) {\n    // setActiveListID([id, ...activeListID]);\n    setActiveListID(id);\n  }\n\n  function deleteTask(id) {\n    setLists(lists.map(list => {\n      if (activeListID === list.id) {\n        return { ...list,\n          tasks: list.tasks.filter(task => task.id !== id)\n        };\n      }\n\n      return list;\n    })); // setTasks(tasks.filter(task => task.id !== id));\n  }\n\n  function updateActiveListDelete() {\n    if (activeListID === lists[0].id) {\n      setActiveListID(lists[1].id);\n    } else {\n      setActiveListID(lists[0].id);\n    }\n  }\n\n  function deleteList(id) {\n    if (id === activeListID) {\n      updateActiveListDelete();\n    }\n\n    setLists(lists.filter(list => list.id !== id));\n  } //   console.log(activeListID, activeList);\n\n\n  console.log(lists);\n  console.log(activeListID); // console.log(lists);\n  // console.log(lists[0]);\n  // console.log(lists[0].id);\n  // console.log(activeListID);\n  // console.log(activeList);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"all-lists\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"all-lists-title\",\n            children: \"My Lists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListForm, {\n            addList: addList,\n            setActive: setActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AllLists, {\n            lists: lists,\n            setActive: setActive,\n            deleteList: deleteList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-list-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"single-list-title\",\n              children: activeList.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"num-tasks\",\n              children: activeList.tasks.filter(task => task.completed === false).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-icon\",\n              onClick: handleClick,\n              children: click ? /*#__PURE__*/_jsxDEV(VscClose, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 26\n              }, this) : /*#__PURE__*/_jsxDEV(VscEllipsis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: click ? \"dropdown-menu-active\" : \"dropdown-menu\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"menu-item-1\",\n                onClick: handleClearTasks,\n                children: \"Clear completed tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"menu-item-2\",\n                onClick: handleDeleteList,\n                children: \"Delete list\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-list-tasks\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n              addTask: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n              tasks: activeList.tasks,\n              toggleComplete: toggleComplete,\n              deleteTask: deleteTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyToDoList, \"dlQYShTVK1iVRPJmAb6Z9TbQZAo=\");\n\n_c = MyToDoList;\nexport default MyToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyToDoList\");","map":{"version":3,"sources":["/Users/evelyn/Desktop/CSC307/ease/frontend/src/components/webpages/MyToDoList.js"],"names":["React","useState","TodoForm","TodoList","ListForm","AllLists","VscEllipsis","VscClose","axios","MyToDoList","click","setClick","handleClick","closeMenu","handleClearTasks","setLists","lists","map","list","activeListID","id","tasks","filter","task","completed","handleDeleteList","deleteList","name","setActiveListID","activeList","find","addTask","push","response","post","console","log","error","addList","toggleComplete","setActive","deleteTask","updateActiveListDelete","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./MyToDoList.css\";\nimport \"../Todo.css\";\nimport \"../Lists.css\";\nimport TodoForm from \"../TodoForm\";\nimport TodoList from \"../TodoList\";\nimport ListForm from \"../ListForm\";\nimport AllLists from \"../AllLists\";\nimport { VscEllipsis, VscClose } from \"react-icons/vsc\";\nimport axios from \"axios\";\n\nfunction MyToDoList() {\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n  const closeMenu = () => setClick(false);\n\n  function handleClearTasks() {\n    closeMenu();\n    setLists(\n      lists.map((list) => {\n        if (activeListID === list.id) {\n          return {\n            ...list,\n            tasks: list.tasks.filter((task) => task.completed === false),\n          };\n        }\n\n        return list;\n      })\n    );\n\n    // setTasks(tasks.filter(task => task.completed === false));\n  }\n\n  function handleDeleteList() {\n    closeMenu();\n    deleteList(activeListID);\n\n    //    setLists(\n    //        lists.filter(list => list.id !== activeListID[0])\n    //    );\n\n    //    setActiveListID(lists.filter(list => list.id !== activeListID[0]));\n    //    setActiveList(lists.find(list => list.id === activeListID[0]));\n  }\n\n  // const [tasks, setTasks] = useState([]);\n  const [lists, setLists] = useState([\n    {\n      id: \"abc123\",\n      name: \"Today\",\n      tasks: [],\n    },\n  ]);\n\n  const [activeListID, setActiveListID] = useState(\"abc123\");\n  // const [activeList, setActiveList] = useState(lists.find(list => list.id === activeListID[0]));\n  const activeList = lists.find((list) => list.id === activeListID);\n\n  async function addTask(task) {\n    setLists(\n      lists.map((list) => {\n        if (activeListID === list.id) {\n          list.tasks.push(task);\n          return {\n            ...list,\n          };\n        }\n        return list;\n      })\n    );\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/task\", task);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n    // setTasks([task, ...tasks]);\n  }\n\n  function addList(list) {\n    setLists([list, ...lists]);\n  }\n\n  function toggleComplete(id) {\n    setLists(\n      lists.map((list) => {\n        if (activeListID === list.id) {\n          return {\n            ...list,\n            tasks: list.tasks.map((task) => {\n              if (task.id === id) {\n                return {\n                  ...task,\n                  completed: !task.completed,\n                };\n              }\n              return task;\n            }),\n          };\n        }\n        return list;\n      })\n    );\n\n    // setTasks(\n    //   tasks.map(task => {\n    //     if (task.id === id) {\n    //       return {\n    //         ...task,\n    //         completed: !task.completed\n    //       };\n    //     }\n    //     return task;\n    //   })\n    // )\n  }\n\n  function setActive(id) {\n    // setActiveListID([id, ...activeListID]);\n    setActiveListID(id);\n  }\n\n  function deleteTask(id) {\n    setLists(\n      lists.map((list) => {\n        if (activeListID === list.id) {\n          return {\n            ...list,\n            tasks: list.tasks.filter((task) => task.id !== id),\n          };\n        }\n        return list;\n      })\n    );\n\n    // setTasks(tasks.filter(task => task.id !== id));\n  }\n  function updateActiveListDelete() {\n    if (activeListID === lists[0].id) {\n      setActiveListID(lists[1].id);\n    } else {\n      setActiveListID(lists[0].id);\n    }\n  }\n\n  function deleteList(id) {\n    if (id === activeListID) {\n      updateActiveListDelete();\n    }\n    setLists(lists.filter((list) => list.id !== id));\n  }\n  //   console.log(activeListID, activeList);\n\n  console.log(lists);\n  console.log(activeListID);\n\n  // console.log(lists);\n  // console.log(lists[0]);\n  // console.log(lists[0].id);\n  // console.log(activeListID);\n  // console.log(activeList);\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"panel\">\n          <div className=\"all-lists\">\n            <h2 className=\"all-lists-title\">My Lists</h2>\n            <ListForm addList={addList} setActive={setActive} />\n            <AllLists\n              lists={lists}\n              setActive={setActive}\n              deleteList={deleteList}\n            ></AllLists>\n          </div>\n        </div>\n        <div className=\"main\">\n          <div className=\"single-list\">\n            <div className=\"single-list-header\">\n              <h1 className=\"single-list-title\">{activeList.name}</h1>\n              <p className=\"num-tasks\">\n                {\n                  activeList.tasks.filter((task) => task.completed === false)\n                    .length\n                }\n              </p>\n\n              <div className=\"dropdown-icon\" onClick={handleClick}>\n                {click ? <VscClose /> : <VscEllipsis />}\n              </div>\n              <ul className={click ? \"dropdown-menu-active\" : \"dropdown-menu\"}>\n                <li className=\"menu-item-1\" onClick={handleClearTasks}>\n                  Clear completed tasks\n                </li>\n                <li className=\"menu-item-2\" onClick={handleDeleteList}>\n                  Delete list\n                </li>\n              </ul>\n            </div>\n\n            <div className=\"single-list-tasks\">\n              <div className=\"tasks\" />\n              <TodoForm addTask={addTask} />\n              <TodoList\n                tasks={activeList.tasks}\n                toggleComplete={toggleComplete}\n                deleteTask={deleteTask}\n              ></TodoList>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default MyToDoList;\n"]},"metadata":{},"sourceType":"module"}