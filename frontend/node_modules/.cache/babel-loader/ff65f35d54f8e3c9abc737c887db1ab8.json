{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\OneDrive\\\\Desktop\\\\CSC307-ToDoList\\\\frontend\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(_ref) {\n  _s();\n\n  let {\n    addTask\n  } = _ref;\n  const [task, setTask] = useState({\n    id: \"\",\n    name: \"\",\n    completed: false,\n    priority: 0\n  });\n\n  function handleTaskInputChange(e) {\n    setTask({ ...task,\n      name: e.target.value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (task.name.trim()) {\n      const crypto = require(\"crypto\");\n\n      const id = crypto.randomBytes(16).toString(\"hex\");\n      addTask({ ...task,\n        id: id\n      }); // reset task input \n\n      setTask({ ...task,\n        name: \"\"\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      align: \"center\",\n      placeholder: \"add task\",\n      name: \"task\",\n      type: \"text\",\n      value: task.name,\n      onChange: handleTaskInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      size: \"lg\",\n      type: \"add\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"167rOWci8y9x8xFgV83SnmlBQD8=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/dylan/OneDrive/Desktop/CSC307-ToDoList/frontend/src/components/TodoForm.js"],"names":["React","useState","TodoForm","addTask","task","setTask","id","name","completed","priority","handleTaskInputChange","e","target","value","handleSubmit","preventDefault","trim","crypto","require","randomBytes","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,OAA6B;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAC7BK,IAAAA,EAAE,EAAE,EADyB;AAE7BC,IAAAA,IAAI,EAAE,EAFuB;AAG7BC,IAAAA,SAAS,EAAE,KAHkB;AAI7BC,IAAAA,QAAQ,EAAE;AAJmB,GAAD,CAAhC;;AAOA,WAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAC9BN,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,MAAAA,IAAI,EAAEI,CAAC,CAACC,MAAF,CAASC;AAA1B,KAAD,CAAP;AACH;;AAED,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIX,IAAI,CAACG,IAAL,CAAUS,IAAV,EAAJ,EAAsB;AAClB,YAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,YAAMZ,EAAE,GAAGW,MAAM,CAACE,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAAX;AACAjB,MAAAA,OAAO,CAAC,EAAE,GAAGC,IAAL;AAAWE,QAAAA,EAAE,EAAEA;AAAf,OAAD,CAAP,CAHkB,CAIlB;;AACAD,MAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUG,QAAAA,IAAI,EAAE;AAAhB,OAAD,CAAP;AACH;AACJ;;AACD,sBACI;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA,4BACI;AACI,MAAA,KAAK,EAAC,QADV;AAEI,MAAA,WAAW,EAAC,UAFhB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,KAAK,EAAEV,IAAI,CAACG,IALhB;AAMI,MAAA,QAAQ,EAAEG;AANd;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAnCQR,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction TodoForm({addTask}) {\n    const [task, setTask] = useState({\n        id: \"\",\n        name: \"\",\n        completed: false,\n        priority: 0\n    });\n\n    function handleTaskInputChange(e) {\n        setTask({ ...task, name: e.target.value });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (task.name.trim()) {\n            const crypto = require(\"crypto\");\n            const id = crypto.randomBytes(16).toString(\"hex\");\n            addTask({ ...task, id: id });\n            // reset task input \n            setTask({...task, name: \"\"});\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                align=\"center\"\n                placeholder=\"add task\"\n                name=\"task\"\n                type=\"text\"\n                value={task.name}\n                onChange={handleTaskInputChange}\n                />\n            <button size=\"lg\" type=\"add\">+</button>\n        </form>\n    )\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}